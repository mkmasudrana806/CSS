// always @use use at top level
@use "./partials/variables" as var;
@import "./partials/variables";

@mixin basic-btn {
  padding: 5px 7px;
  border: 1px solid green;
  border-radius: 10px;
  color: green;
}

// provide default values and if else condition
@mixin custom-btn($color: green, $pad: 15px 20px, $value: small) {
  padding: $pad;
  border: 1px solid $color;
  border-radius: 10px;
  color: $color;
  @if $value == "large" {
    font-size: 20px;
  } @else if $value == "medium" {
    font-size: 17px;
  } @else {
    font-size: 15px;
  }
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

.btn1 {
  @include basic-btn;
}

.btn2 {
  @include custom-btn(blue, 10px 15px, medium);
}

.btn3 {
  @include custom-btn(var.$secondary-color);
}

// input fields
.input {
  padding: 5px 7px;
}
.inputs {
  display: flex;
  flex-direction: column;
  width: 300px;
  row-gap: 10px;
}

// extend selector, this is called inheritance
.input1 {
  @extend .input;
}

.input2 {
  @extend .input;
  color: blue;
}

// blogs
// each blog color using @each iterator
@each $color in green, blue, indigo, gray, red {
  .text-#{$color} {
    color: $color;
  }
}

// @for loop
@for $variable from 1 to 12 {
  .col-#{$variable} {
    color: green;
  }
}

// @for loop using to (end excluded)
@for $variable from 1 to 12 {
  .col-#{$variable} {
    color: green;
  }
}

// @for loop using through(end included)
@for $variable from 1 to 12 {
  .col-#{$variable} {
    color: green;
  }
}
